"""create tables

Revision ID: 61f27a684e95
Revises: 
Create Date: 2023-09-12 12:00:44.973531

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '61f27a684e95'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('yoga_signups')
    op.drop_table('community_events')
    op.drop_table('yoga_classes')
    op.drop_table('community_event_signups')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('first_name', sa.VARCHAR(), nullable=True),
    sa.Column('last_name', sa.VARCHAR(), nullable=True),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('address', sa.VARCHAR(), nullable=True),
    sa.Column('role', sa.VARCHAR(), nullable=True),
    sa.Column('membership_status', sa.BOOLEAN(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.CheckConstraint('membership_status IN (0, 1)', name='ck_users_membership_status'),
    sa.PrimaryKeyConstraint('id', name='pk_users')
    )
    op.create_table('community_event_signups',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('community_event_id', sa.INTEGER(), nullable=True),
    sa.Column('user_status', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['community_event_id'], ['community_events.id'], name='fk_community_event_signups_community_event_id_community_events'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_community_event_signups_user_id_users'),
    sa.PrimaryKeyConstraint('id', name='pk_community_event_signups')
    )
    op.create_table('yoga_classes',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('class_name', sa.VARCHAR(), nullable=True),
    sa.Column('class_description', sa.VARCHAR(), nullable=True),
    sa.Column('start_time', sa.DATETIME(), nullable=True),
    sa.Column('time_duration', sa.VARCHAR(), nullable=True),
    sa.Column('teacher_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['teacher_id'], ['users.id'], name='fk_yoga_classes_teacher_id_users'),
    sa.PrimaryKeyConstraint('id', name='pk_yoga_classes')
    )
    op.create_table('community_events',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('event_name', sa.VARCHAR(), nullable=True),
    sa.Column('event_description', sa.VARCHAR(), nullable=True),
    sa.Column('start_time', sa.DATETIME(), nullable=True),
    sa.Column('time_duration', sa.VARCHAR(), nullable=True),
    sa.Column('location', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id', name='pk_community_events')
    )
    op.create_table('yoga_signups',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('yoga_class_id', sa.INTEGER(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='fk_yoga_signups_user_id_users'),
    sa.ForeignKeyConstraint(['yoga_class_id'], ['yoga_classes.id'], name='fk_yoga_signups_yoga_class_id_yoga_classes'),
    sa.PrimaryKeyConstraint('id', name='pk_yoga_signups')
    )
    # ### end Alembic commands ###
